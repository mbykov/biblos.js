{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"electron-settings\"","webpack:///external \"url\"","webpack:///./src/app.config.js","webpack:///./src/menu/left_menu_template.js","webpack:///./src/locales/i18n.js","webpack:///./src/menu/file_menu_template.js","webpack:///./src/menu/lang_eng_menu_template.js","webpack:///./src/menu/lang_deu_menu_template.js","webpack:///./src/menu/lang_rus_menu_template.js","webpack:///./src/menu/lang_zho_menu_template.js","webpack:///./src/menu/lang_tib_menu_template.js","webpack:///./src/locales/menu-factory.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/background.js","webpack:///external \"path\"","webpack:///external \"fs-extra\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","config","code","host","pages","defstate","batch_size","splitSizes","langs","ldname","deflang","path","electron","fse","loadedLanguage","app","remote","apath","console","log","getAppPath","contents","settings","i18n","phrase","lang","langFile","localePath","resolve","pathExistsSync","readJsonSync","enPath","dcased","uncap","capitalize","charAt","toUpperCase","slice","toLowerCase","engMenuTemplate","label","submenu","click","BrowserWindow","getFocusedWindow","webContents","send","deuMenuTemplate","rusMenuTemplate","zhoMenuTemplate","tibMenuTemplate","Menu","MenuFactory","menus","accelerator","quit","type","reloadIgnoringCache","toggleDevTools","push","setApplicationMenu","buildFromTemplate","on","win","webPreferences","nodeIntegration","winBounds","getBounds","y","setBounds","loadURL","url","format","pathname","join","__dirname","protocol","slashes","env","openDevTools","pckg","version","setTitle","set","ipcMain","event"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","module.exports = require(\"electron\");","module.exports = require(\"electron-settings\");","module.exports = require(\"url\");","//\n\nexport const config = {\n  code: 'grc',\n  host: 'http://diglossa.org:5984',\n  pages: ['home', 'main', 'remote-dicts', 'arrange-dicts', 'db-info', 'arrange-dicts', 'help', 'dict-edit', 'local-chunk', 'local-dict-full', 'local-dict-item', 'localdict-help', 'about', 'authentic', 'code', 'license', 'acknowledgements', 'arrange-dicts', 'contacts', 'csv'],\n  defstate: 'home',\n  batch_size: 500,\n  splitSizes: [50, 50],\n  langs: ['eng', 'deu', 'rus'],\n  ldname: 'local',\n  deflang: 'eng'\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const leftMenuTemplate = {\n  label: \"<--\",\n  // accelerator: \"Alt+LeftArrow\",\n  click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'goleft') }\n}\n","const path = require(\"path\")\nconst electron = require('electron')\nconst fse = require('fs-extra');\nlet loadedLanguage;\nlet app = electron.app ? electron.app : electron.remote.app\nlet log = console.log\n\nlet apath = app.getAppPath()\nlet contents = {}\nconst settings = require('electron-settings')\n\nexport function i18n(phrase) {\n  // log('________________________PHRASE', phrase)\n  // let state = settings.get('state')\n  // log('________________________STATE', state, state.lang)\n  // let lang = state.lang || 'eng'\n  let lang = settings.get('lang') || 'eng'\n  // log('________________________i18 lang', lang, phrase)\n\n  if (!contents[lang]) {\n    let langFile = lang + '.js'\n    let localePath = path.resolve(apath, 'src/locales', langFile)\n\t  if (fse.pathExistsSync(localePath)) {\n\t\t  loadedLanguage = fse.readJsonSync(localePath)\n\t  } else {\n      let enPath = path.resolve(apath, 'src/locales/eng.js')\n\t\t  loadedLanguage = fse.readJsonSync(enPath)\n\t  }\n    contents[lang] = loadedLanguage\n    // log('________________________loadedLanguage', lang, contents[lang])\n  }\n  let dcased = uncap(phrase)\n  return capitalize(contents[lang][dcased]) || capitalize(phrase)\n}\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst uncap = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toLowerCase() + s.slice(1)\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\nlet log  = console.log\n\nexport function fileMenuTemplate() {\n  let menu =  {\n    label: \"File\",\n    submenu: [\n      {  label: t(\"home\"),\n         accelerator: \"CmdOrCtrl+H\",\n         click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n      { label: t(\"Quit\"),\n        accelerator: \"CmdOrCtrl+Q\",\n        click: () => {\n          app.quit();\n        }\n      }\n    ]\n  }\n  return menu\n}\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const engMenuTemplate = {\n  label: \"ENG\",\n  submenu: [\n    {\n      label: \"DEU\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n      }\n    },\n    {\n      label: \"RUS\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n      }\n    },\n    // {\n    //   label: \"TIB\",\n    //   click: () => {\n    //     BrowserWindow.getFocusedWindow().webContents.send('lang', 'tib')\n    //   }\n    // },\n    // {\n    //   label: \"ZHO\",\n    //   click: () => {\n    //     BrowserWindow.getFocusedWindow().webContents.send('lang', 'zho')\n    //   }\n    // }\n  ]\n};\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const deuMenuTemplate = {\n  label: \"DEU\",\n  submenu: [\n    {\n      label: \"ENG\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n      }\n    },\n    {\n      label: \"RUS\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n      }\n    },\n    // {\n    //   label: \"TIB\",\n    //   click: () => {\n    //     BrowserWindow.getFocusedWindow().webContents.send('lang', 'tib')\n    //   }\n    // },\n    // {\n    //   label: \"ZHO\",\n    //   click: () => {\n    //     BrowserWindow.getFocusedWindow().webContents.send('lang', 'zho')\n    //   }\n    // }\n  ]\n};\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const rusMenuTemplate = {\n  label: \"RUS\",\n  submenu: [\n    {\n      label: \"DEU\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n      }\n    },\n    {\n      label: \"ENG\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n      }\n    },\n    // {\n    //   label: \"TIB\",\n    //   click: () => {\n    //     BrowserWindow.getFocusedWindow().webContents.send('lang', 'tib')\n    //   }\n    // },\n    // {\n    //   label: \"ZHO\",\n    //   click: () => {\n    //     BrowserWindow.getFocusedWindow().webContents.send('lang', 'zho')\n    //   }\n    // }\n  ]\n};\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const zhoMenuTemplate = {\n  label: \"ZHO\",\n  submenu: [\n    {\n      label: \"ENG\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n      }\n    },\n    {\n      label: \"DEU\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n      }\n    },\n    {\n      label: \"RUS\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n      }\n    },\n    {\n      label: \"TIB\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'tib')\n      }\n    }\n  ]\n};\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const tibMenuTemplate = {\n  label: \"TIB\",\n  submenu: [\n    {\n      label: \"ENG\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n      }\n    },\n    {\n      label: \"DEU\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n      }\n    },\n    {\n      label: \"RUS\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n      }\n    },\n    {\n      label: \"ZHO\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'zho')\n      }\n    }\n  ]\n};\n","const Menu = require('electron').Menu;\nconst config = require('../app.config');\n// import env from \"env\";\n\nimport { leftMenuTemplate } from \"../menu/left_menu_template\";\nimport { rightMenuTemplate } from \"../menu/right_menu_template\";\nimport { fileMenuTemplate } from \"../menu/file_menu_template\";\nimport { dictMenuTemplate } from \"../menu/dict_menu_template\";\nimport { bookMenuTemplate } from \"../menu/book_menu_template\";\nimport { aboutMenuTemplate } from \"../menu/about_menu_template\";\nimport { editMenuTemplate } from \"../menu/edit_menu_template\";\nimport { helpMenuTemplate } from \"../menu/help_menu_template\";\n// import { devMenuTemplate } from \"../menu/dev_menu_template\";\n// import { langMenuTemplate } from \"../menu/lang_menu_template\";\nimport { engMenuTemplate } from \"../menu/lang_eng_menu_template\";\nimport { deuMenuTemplate } from \"../menu/lang_deu_menu_template\";\nimport { rusMenuTemplate } from \"../menu/lang_rus_menu_template\";\nimport { zhoMenuTemplate } from \"../menu/lang_zho_menu_template\";\nimport { tibMenuTemplate } from \"../menu/lang_tib_menu_template\";\nconst log = console.log\n\n// const menu = null;\n// const platform = process.platform;\n\nexport function MenuFactory(lang) {\n  // const menus = [leftMenuTemplate, rightMenuTemplate, fileMenuTemplate(), dictMenuTemplate(), aboutMenuTemplate(), helpMenuTemplate()];\n  const menus = [fileMenuTemplate(), dictMenuTemplate(), aboutMenuTemplate(), helpMenuTemplate()];\n\n  // if (env.name !== \"production\") {\n  //   menus.push(devMenuTemplate);\n  // }\n  // menus.push(langMenuTemplate);\n\n  switch(lang) {\n  case 'eng':\n    menus.push(engMenuTemplate);\n    break\n  case 'deu':\n    menus.push(deuMenuTemplate);\n    break\n  case 'rus':\n    menus.push(rusMenuTemplate);\n    break\n  case 'tib':\n    menus.push(tibMenuTemplate);\n    break\n  case 'zho':\n    menus.push(zhoMenuTemplate);\n    break\n  default:\n    menus.push(engMenuTemplate);\n  }\n\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function dictMenuTemplate() {\n  let menu =  {\n    label: t(\"dictionary\"),\n    submenu: [\n      // { label: t(\"Arrange local dicts\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'arrange-dicts') } },\n      { label: t(\"Arrange and clone dicts from server\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'remote-dicts') } },\n      { label: t(\"local dictionary\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict-help') } },\n      // { label: t(\"Import dict form CSV\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'csv-dicts') } },\n      // { label: t(\"Create CSV from texts\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict') } },\n      // { label: t(\"Publish dictionary\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'publish') } },\n      // { label: t(\"Reread the source\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'reread-dict') } },\n      { type: 'separator' },\n      { label: t(\"Cleanup DBs completely\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n    ]\n  }\n  return menu\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function aboutMenuTemplate() {\n  let menu =  {\n    label: t(\"About\"),\n    submenu: [\n      { label: t(\"About\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'about') } },\n      { label: t(\"Authentic grammar\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'authentic') } },\n      { label: t(\"code and download\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n      { label: t(\"License\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n      { label: t(\"Contacts\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'contacts') } },\n      { label: t(\"Acknowledgements\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n    ]\n  }\n  return menu\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function helpMenuTemplate() {\n  let menu =  {\n    label: t(\"Help\"),\n    submenu: [\n      { label: t(\"hot keys\"), accelerator: \"Shift+CmdOrCtrl+H\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n      { label: \"Reload\", accelerator: \"Shift+CmdOrCtrl+R\", click: () => { BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache(); }  },\n      { label: t(\"Toggle devTools\"),\n        accelerator: \"Alt+CmdOrCtrl+I\",\n        click: () => {\n          BrowserWindow.getFocusedWindow().toggleDevTools();\n        }\n      }\n    ]\n  }\n  return menu\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, BrowserWindow, ipcMain, Menu } from \"electron\";\nconst settings = require('electron-settings')\nimport { MenuFactory } from \"./locales/menu-factory\";\nconst log = console.log\n\nconst config = require('./app.config');\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\n// const setApplicationMenu = () => {\n//   const menus = [editMenuTemplate];\n//   if (env.name !== \"production\") {\n//     menus.push(devMenuTemplate);\n//   }\n//   menus.push(langMenuTemplate);\n//   Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n// };\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\n// if (env.name !== \"production\") {\n//   const userDataPath = app.getPath(\"userData\");\n//   app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n//   // app.setPath(\"userData\", `${userDataPath}-devel`);\n// }\n\napp.on(\"ready\", () => {\n  // setApplicationMenu();\n  let lang = settings.get('lang') || 'eng'\n  MenuFactory(lang)\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n    // nodeIntegration: false,\n    // nodeIntegrationInWorker: false\n  }}\n\n  const win = new BrowserWindow(opts)\n  let winBounds = settings.get('winBounds') || win.getBounds()\n  winBounds.y -= 21\n  win.setBounds(winBounds)\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    win.openDevTools();\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n});\n\n// ipcMain.on('unload', (event, state, lang) => {\n//   settings.set('state', state)\n//   settings.set('lang', lang)\n// })\n\nipcMain.on('lang', (event, lang) => {\n  MenuFactory(lang)\n})\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n","module.exports = require(\"path\");","module.exports = require(\"fs-extra\");"],"sourceRoot":""}