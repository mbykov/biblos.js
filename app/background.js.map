{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///./src/configs/app.config.js","webpack:///external \"fs-extra\"","webpack:///external \"electron-settings\"","webpack:///external \"url\"","webpack:///./src/locales/i18n.js","webpack:///./src/menu/file_menu_template.js","webpack:///./src/menu/edit_menu_template.js","webpack:///./src/menu/lang_menu_template.js","webpack:///./src/locales/menu-factory.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/book_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","config","code","pages","langs","deflang","path","electron","fse","loadedLanguage","app","remote","apath","console","log","getAppPath","contents","settings","i18n","phrase","lang","langFile","localePath","resolve","pathExistsSync","readJsonSync","enPath","dcased","uncap","capitalize","charAt","toUpperCase","slice","toLowerCase","langMenuTemplate","label","submenu","click","BrowserWindow","getFocusedWindow","webContents","send","Menu","MenuFactory","menus","accelerator","quit","type","enabled","reloadIgnoringCache","toggleDevTools","push","setApplicationMenu","buildFromTemplate","env","userDataPath","getPath","setPath","on","win","webPreferences","nodeIntegration","loadURL","url","format","pathname","join","__dirname","protocol","slashes","openDevTools","pckg","version","setTitle","set","getBounds","upath","ipcMain","event"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","//\n\nexport const config = {\n  code: 'grc',\n  // pages: ['home', 'help', 'about', 'code', 'license', 'acknowledgements', 'arrange-dicts', 'contacts', 'csv', 'publish', 'dict-by-text', 'remotedicts', 'db-info'],\n  pages: ['home', 'remotedicts'],\n  // langs: ['eng', 'deu', 'rus'],\n  langs: ['eng'],\n  deflang: 'eng'\n}\n","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-settings\");","module.exports = require(\"url\");","const path = require(\"path\")\nconst electron = require('electron')\nconst fse = require('fs-extra');\nlet loadedLanguage;\nlet app = electron.app ? electron.app : electron.remote.app\nlet log = console.log\n\nlet apath = app.getAppPath()\nlet contents = {}\nconst settings = require('electron-settings')\n\nexport function i18n(phrase) {\n  let lang = settings.get('lang') || 'eng'\n  if (!contents[lang]) {\n    let langFile = lang + '.js'\n    let localePath = path.resolve(apath, 'src/locales', langFile)\n\t  if (fse.pathExistsSync(localePath)) {\n\t\t  loadedLanguage = fse.readJsonSync(localePath)\n\t  } else {\n      let enPath = path.resolve(apath, 'src/locales/en.js')\n\t\t  loadedLanguage = fse.readJsonSync(enPath)\n\t  }\n    contents[lang] = loadedLanguage\n  }\n  let dcased = uncap(phrase)\n  return capitalize(contents[lang][dcased]) || capitalize(phrase)\n}\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst uncap = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toLowerCase() + s.slice(1)\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\nlet log  = console.log\n\nexport function fileMenuTemplate() {\n  let menu =  {\n    label: \"File\",\n    submenu: [\n      {  label: t(\"home\"),\n         accelerator: \"CmdOrCtrl+L\",\n         click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n      { label: t(\"Quit\"),\n        accelerator: \"CmdOrCtrl+Q\",\n        click: () => {\n          app.quit();\n        }\n      }\n    ]\n  }\n  return menu\n}\n","export const editMenuTemplate = {\n  label: \"Edit\",\n  submenu: [\n    { label: \"Undo\", accelerator: \"CmdOrCtrl+Z\", selector: \"undo:\" },\n    { label: \"Redo\", accelerator: \"Shift+CmdOrCtrl+Z\", selector: \"redo:\" },\n    { type: \"separator\" },\n    { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n    { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n    { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n    { label: \"Select All\", accelerator: \"CmdOrCtrl+A\", selector: \"selectAll:\" }\n  ]\n};\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const langMenuTemplate = {\n  label: \"Lang\",\n  submenu: [\n    {\n      label: \"EN\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n      }\n    },\n    {\n      label: \"DE\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n      }\n    },\n    {\n      label: \"RU\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n      }\n    }\n  ]\n};\n","const Menu = require('electron').Menu;\nconst config = require('../configs/app.config');\nimport env from \"env\";\n\nimport { fileMenuTemplate } from \"../menu/file_menu_template\";\nimport { dictMenuTemplate } from \"../menu/dict_menu_template\";\nimport { bookMenuTemplate } from \"../menu/book_menu_template\";\nimport { aboutMenuTemplate } from \"../menu/about_menu_template\";\n// import { devMenuTemplate } from \"../menu/dev_menu_template\";\nimport { editMenuTemplate } from \"../menu/edit_menu_template\";\nimport { langMenuTemplate } from \"../menu/lang_menu_template\";\nimport { helpMenuTemplate } from \"../menu/help_menu_template\";\nconst log = console.log\n\n// const menu = null;\n// const platform = process.platform;\n\nexport function MenuFactory() {\n  // log('menu FACTORY')\n  const menus = [fileMenuTemplate(), dictMenuTemplate(), bookMenuTemplate(), aboutMenuTemplate(), helpMenuTemplate()];\n  // if (env.name !== \"production\") {\n  //   menus.push(devMenuTemplate);\n  // }\n  menus.push(langMenuTemplate);\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function dictMenuTemplate() {\n  let menu =  {\n    label: t(\"dictionary\"),\n    submenu: [\n      { label: t(\"Arrange local dicts\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'activedicts') } },\n      { label: t(\"Clone from server\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'remotedicts') } },\n      { label: t(\"Import form CSV\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'csv') } },\n      { label: t(\"Create CSV from texts\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict') } },\n      { label: t(\"Publish dictionary\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'publish') } },\n      { label: t(\"Reread the source\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'reread-dict') } },\n      { label: t(\"Cleanup DBs completely\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n    ]\n  }\n  return menu\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function bookMenuTemplate() {\n  let menu =  {\n    label: t(\"Book\"),\n    submenu: [\n      { label: t(\"Import from ODS\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('parseOds') } },\n      { label: t(\"Import from file\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('parseDir') } },\n      { type: 'separator' },\n      { label: t(\"Clone from Github\"), enabled: false, click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'cloneGithub') } },\n      { label: t(\"Publish book\"), enabled: false, click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'publish') } },\n      { type: \"separator\" },\n      { label: t(\"Export to TXT\"), enabled: false, click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'exportTXT') } },\n      { label: t(\"Export to PDF\"), enabled: false, click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'exportPDF') } },\n      { label: t(\"Export to HTML\"), enabled: false, click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'exportHTML') } },\n      { type: \"separator\" },\n      { label: t(\"Create dictionary for book\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'createDict') } },\n      { type: \"separator\" },\n      { label: t(\"Reread the source\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'reread-book') } },\n      { label: t(\"Cleanup DBs completely\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'cleanup') } },\n      { type: \"separator\" },\n    ]\n  }\n  return menu\n}\n\n// { label: \"Reload application\", accelerator: \"CommandOrControl+Shift+R\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('reload') } },\n// { label: \"Re-read source\", accelerator: \"CommandOrControl+R\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('reread') } },\n// { type: \"separator\" },\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function aboutMenuTemplate() {\n  let menu =  {\n    label: t(\"About\"),\n    submenu: [\n      { label: t(\"About\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'about') } },\n      { label: t(\"code and download\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n      { label: t(\"License\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n      { label: t(\"Contacts\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'contacts') } },\n      { label: t(\"Acknowledgements\"), click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n    ]\n  }\n  return menu\n}\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\n\nexport function helpMenuTemplate() {\n  let menu =  {\n    label: t(\"Help\"),\n    submenu: [\n      { label: t(\"hot keys\"), accelerator: \"Shift+CmdOrCtrl+H\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n      { label: \"Reload\", accelerator: \"Shift+CmdOrCtrl+R\", click: () => { BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache(); }  },\n      { label: t(\"Toggle devTools\"),\n        accelerator: \"Alt+CmdOrCtrl+I\",\n        click: () => {\n          BrowserWindow.getFocusedWindow().toggleDevTools();\n        }\n      }\n    ]\n  }\n  return menu\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, BrowserWindow, ipcMain, Menu } from \"electron\";\nconst settings = require('electron-settings')\nimport { MenuFactory } from \"./locales/menu-factory\";\nconst log = console.log\n\nconst config = require('./configs/app.config');\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\n// const setApplicationMenu = () => {\n//   const menus = [editMenuTemplate];\n//   if (env.name !== \"production\") {\n//     menus.push(devMenuTemplate);\n//   }\n//   menus.push(langMenuTemplate);\n//   Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n// };\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\n\napp.on(\"ready\", () => {\n  // setApplicationMenu();\n  MenuFactory()\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n    // nodeIntegration: false,\n    // nodeIntegrationInWorker: false\n  }}\n\n  const win = new BrowserWindow(opts)\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    win.openDevTools();\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  settings.set('apath', apath)\n  settings.set('upath', upath)\n\n  // ensureCfg(upath)\n\n  ipcMain.on('lang', (event, lang) => {\n    log('_____ BACK-LANG-CHANGE', lang)\n    MenuFactory()\n  })\n\n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n"],"sourceRoot":""}