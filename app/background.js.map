{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///./src/configs/app.config.js","webpack:///external \"fs-extra\"","webpack:///external \"electron-settings\"","webpack:///external \"url\"","webpack:///./src/locales/i18n.js","webpack:///./src/menu/file_menu_template.js","webpack:///./src/menu/dev_menu_template.js","webpack:///./src/menu/edit_menu_template.js","webpack:///./src/menu/lang_menu_template.js","webpack:///./src/menu/test_menu_template.js","webpack:///./src/lib/menuFactory.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","config","pages","langs","deflang","path","electron","fse","loadedLanguage","app","remote","log","console","apath","getAppPath","contents","settings","i18n","phrase","lang","langFile","localePath","resolve","pathExistsSync","readJsonSync","enPath","dcased","toLowerCase","devMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","reloadIgnoringCache","toggleDevTools","quit","editMenuTemplate","selector","type","langMenuTemplate","send","Menu","MenuFactory","menus","env","push","setApplicationMenu","buildFromTemplate","userDataPath","getPath","setPath","on","win","webPreferences","nodeIntegration","loadURL","url","format","pathname","join","__dirname","protocol","slashes","openDevTools","ipcMain","event"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","//\n\nexport const config = {\n  pages: ['home', 'help'],\n  langs: ['eng', 'deu', 'rus'],\n  deflang: 'eng'\n}\n","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-settings\");","module.exports = require(\"url\");","const path = require(\"path\")\nconst electron = require('electron')\nconst fse = require('fs-extra');\nlet loadedLanguage;\nlet app = electron.app ? electron.app : electron.remote.app\nlet log = console.log\n\n// module.exports = i18n;\nlet apath = app.getAppPath()\nlet contents = {}\nconst settings = require('electron-settings')\n\nexport function i18n(phrase) {\n  let lang = settings.get('lang') || 'eng'\n  log('LANG FROM SETT', lang, 'phrase', phrase)\n  if (!contents[lang]) {\n    let langFile = lang + '.js'\n    let localePath = path.resolve(apath, 'src/locales', langFile)\n    // log('localePath', localePath, fse.pathExistsSync(localePath))\n\t  if (fse.pathExistsSync(localePath)) {\n\t\t  loadedLanguage = fse.readJsonSync(localePath)\n\t  } else {\n      let enPath = path.resolve(apath, 'src/locales/en.js')\n\t\t  loadedLanguage = fse.readJsonSync(enPath)\n\t  }\n    contents[lang] = loadedLanguage\n    // log('LL', loadedLanguage)\n  }\n  let dcased = phrase.toLowerCase()\n  log('i18n:', lang, phrase, contents[lang][dcased])\n  return contents[lang][dcased] || phrase\n}\n\n// export function i18n_(lang) {\n//   let langFile = lang + '.js'\n//   let localePath = path.resolve(apath, 'src/locales', langFile)\n\n// \tif(fs.existsSync(localePath)) {\n// \t\tloadedLanguage = JSON.parse(fs.readFileSync(localePath, 'utf8'))\n// \t}\n// \telse {\n//     let enPath = path.resolve(apath, 'src/locales/en.js')\n// \t\tloadedLanguage = JSON.parse(fs.readFileSync(enPath, 'utf8'))\n// \t}\n//   // this.t = function(phrase) {\n//     // return loadedLanguage[phrase] || phrase\n//   // }\n//   // return loadedLanguage[phrase] || phrase\n// }\n\n// i18n.prototype.t = function(phrase) {\n// \tlet translation = loadedLanguage[phrase]\n//   if(translation === undefined) {\n//     translation = phrase\n//   }\n// \treturn translation\n// }\n\n// export class Translate {\n//   constructor() {\n//     this.default = 'en'\n//   }\n//   set lang(lang) {\n//     this._lang = lang\n//   }\n//   get lang() {\n//     return this._lang;\n//   }\n//   t(phrase) {\n//     if (!this.lang) this.lang = 'ru'\n//     console.log('Hello, my name is ' + this.lang + ', I have ID: ' + this.default + ', PHRASE: ' + phrase);\n//     return {lang: this.lang, phrase: phrase}\n//   }\n// }\n\n// // let i18m = new Translate()\n// // export i18m;\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t } from \"../locales/i18n\";\nlet log  = console.log\nlog('___________________', t('home'))\n\nexport function fileMenuTemplate() {\n  let menu =  {\n    label: \"File\",\n    submenu: [\n      {  label: t(\"home\"),\n      // {  label: \"Home\",\n            accelerator: \"CmdOrCtrl+L\",\n         click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n      { label: t(\"Quit\"),\n        accelerator: \"CmdOrCtrl+Q\",\n        click: () => {\n          app.quit();\n        }\n      }\n    ]\n  }\n  // log('FILE MENU', menu)\n  return menu\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const devMenuTemplate = {\n  label: \"Development\",\n  submenu: [\n    {\n      label: \"Reload\",\n      accelerator: \"Shift+CmdOrCtrl+R\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache();\n      }\n    },\n    {\n      label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    },\n    {\n      label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n};\n","export const editMenuTemplate = {\n  label: \"Edit\",\n  submenu: [\n    { label: \"Undo\", accelerator: \"CmdOrCtrl+Z\", selector: \"undo:\" },\n    { label: \"Redo\", accelerator: \"Shift+CmdOrCtrl+Z\", selector: \"redo:\" },\n    { type: \"separator\" },\n    { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n    { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n    { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n    { label: \"Select All\", accelerator: \"CmdOrCtrl+A\", selector: \"selectAll:\" }\n  ]\n};\n","import { app, BrowserWindow, ipcRenderer } from \"electron\";\n\nexport const langMenuTemplate = {\n  label: \"Lang\",\n  submenu: [\n    {\n      label: \"EN\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n      }\n    },\n    {\n      label: \"DE\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n      }\n    },\n    {\n      label: \"RU\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n      }\n    }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\nimport { i18n as t, Translate } from \"../locales/i18n\";\nlet log  = console.log\nconst settings = require('electron-settings')\n// let i18n = require('../locales/i18n')\n// let tt = new i18n\n// let t = tt.t\n// let i18m = new Translate()\n// let t = i18m.t\n\nexport function testMenuTemplate(lang) {\n  // log('TM start', lang)\n  // if (!lang) lang = 'en'\n  // let lang2 = settings.get('lang')\n  // log('TM start2', lang2)\n  // log('HELLO-EDIT:', t('Edit'))\n  let menu =  {\n    // label: t('Edit'),\n    label: 'Edit',\n    submenu: [\n        {\n          // label: t('Copy'),\n          label: \"COPY\",\n          click: () => {\n            BrowserWindow.getFocusedWindow().webContents.send('lang', 'eng')\n          }\n        },\n        {\n          label: \"DE\",\n          click: () => {\n            BrowserWindow.getFocusedWindow().webContents.send('lang', 'deu')\n          }\n        },\n        {\n          label: \"RU\",\n          click: () => {\n            BrowserWindow.getFocusedWindow().webContents.send('lang', 'rus')\n          }\n        }\n    ]\n  }\n  // console.log('TEST MENU:', menu)\n  return menu\n}\n","const Menu = require('electron').Menu;\nconst config = require('../configs/app.config');\nimport env from \"env\";\n\nimport { fileMenuTemplate } from \"../menu/file_menu_template\";\nimport { devMenuTemplate } from \"../menu/dev_menu_template\";\nimport { editMenuTemplate } from \"../menu/edit_menu_template\";\nimport { langMenuTemplate } from \"../menu/lang_menu_template\";\nimport { testMenuTemplate } from \"../menu/test_menu_template\";\nconst log = console.log\n\n// const menu = null;\n// const platform = process.platform;\n\nexport function MenuFactory(lang) {\n  // log('menu FACTORY')\n  const menus = [fileMenuTemplate(lang), editMenuTemplate, testMenuTemplate(lang)];\n  if (env.name !== \"production\") {\n    menus.push(devMenuTemplate);\n  }\n  menus.push(langMenuTemplate);\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, BrowserWindow, ipcMain, Menu } from \"electron\";\n// import { devMenuTemplate } from \"./menu/dev_menu_template\";\n// import { editMenuTemplate } from \"./menu/edit_menu_template\";\n// import { langMenuTemplate } from \"./menu/lang_menu_template\";\nimport { MenuFactory } from \"./lib/menuFactory\";\nconst log = console.log\n\nconst config = require('./configs/app.config');\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\n// const setApplicationMenu = () => {\n//   const menus = [editMenuTemplate];\n//   if (env.name !== \"production\") {\n//     menus.push(devMenuTemplate);\n//   }\n//   menus.push(langMenuTemplate);\n//   Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n// };\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\n\napp.on(\"ready\", () => {\n  // setApplicationMenu();\n  MenuFactory()\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n  }}\n\n  const win = new BrowserWindow(opts)\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    win.openDevTools();\n  }\n\n  ipcMain.on('lang', (event, lang) => {\n    log('_____ BACK-LANG-CHANGE', lang)\n    MenuFactory(lang)\n  })\n\n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n"],"sourceRoot":""}